<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='breast-cancer (breast-cancer)' inline='true' name='federated.1u9bhqa0axbd4x16bnv0q00o2ch8' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='breast-cancer' name='excel-direct.1c05oql05f0wmq1c4ao3b06ejmam'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\dsi\DSI_LDN_1_LESSON_NOTES\week4\day3\3.1-lesson\breast-cancer.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1c05oql05f0wmq1c4ao3b06ejmam' name='breast-cancer' table='[&apos;breast-cancer$&apos;]' type='table'>
          <columns gridOrigin='A1:AF570:no:A1:AF570:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='diagnosis' ordinal='1' />
            <column datatype='real' name='radius_mean' ordinal='2' />
            <column datatype='real' name='radius_sd_error' ordinal='3' />
            <column datatype='real' name='radius_worst' ordinal='4' />
            <column datatype='real' name='texture_mean' ordinal='5' />
            <column datatype='real' name='texture_sd_error' ordinal='6' />
            <column datatype='real' name='texture_worst' ordinal='7' />
            <column datatype='real' name='perimeter_mean' ordinal='8' />
            <column datatype='real' name='perimeter_sd_error' ordinal='9' />
            <column datatype='real' name='perimeter_worst' ordinal='10' />
            <column datatype='real' name='area_mean' ordinal='11' />
            <column datatype='real' name='area_sd_error' ordinal='12' />
            <column datatype='real' name='area_worst' ordinal='13' />
            <column datatype='real' name='smoothness_mean' ordinal='14' />
            <column datatype='real' name='smoothness_sd_error' ordinal='15' />
            <column datatype='real' name='smoothness_worst' ordinal='16' />
            <column datatype='real' name='compactness_mean' ordinal='17' />
            <column datatype='real' name='compactness_sd_error' ordinal='18' />
            <column datatype='real' name='compactness_worst' ordinal='19' />
            <column datatype='real' name='concavity_mean' ordinal='20' />
            <column datatype='real' name='concavity_sd_error' ordinal='21' />
            <column datatype='real' name='concavity_worst' ordinal='22' />
            <column datatype='real' name='concave_points_mean' ordinal='23' />
            <column datatype='real' name='concave_points_sd_error' ordinal='24' />
            <column datatype='real' name='concave_points_worst' ordinal='25' />
            <column datatype='real' name='symmetry_mean' ordinal='26' />
            <column datatype='real' name='symmetry_sd_error' ordinal='27' />
            <column datatype='real' name='symmetry_worst' ordinal='28' />
            <column datatype='real' name='fractal_dimension_mean' ordinal='29' />
            <column datatype='real' name='fractal_dimension_sd_error' ordinal='30' />
            <column datatype='real' name='fractal_dimension_worst' ordinal='31' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diagnosis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[diagnosis]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>diagnosis</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>radius_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[radius_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>radius_mean</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>radius_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[radius_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>radius_sd_error</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>radius_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[radius_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>radius_worst</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>texture_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[texture_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>texture_mean</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>texture_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[texture_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>texture_sd_error</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>texture_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[texture_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>texture_worst</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perimeter_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perimeter_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>perimeter_mean</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perimeter_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perimeter_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>perimeter_sd_error</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perimeter_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perimeter_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>perimeter_worst</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>area_mean</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>area_sd_error</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>area_worst</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoothness_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[smoothness_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>smoothness_mean</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoothness_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[smoothness_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>smoothness_sd_error</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoothness_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[smoothness_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>smoothness_worst</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compactness_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[compactness_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>compactness_mean</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compactness_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[compactness_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>compactness_sd_error</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compactness_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[compactness_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>compactness_worst</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concavity_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concavity_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concavity_mean</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concavity_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concavity_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concavity_sd_error</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concavity_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concavity_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concavity_worst</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concave_points_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concave_points_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concave_points_mean</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concave_points_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concave_points_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concave_points_sd_error</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>concave_points_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[concave_points_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>concave_points_worst</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>symmetry_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[symmetry_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>symmetry_mean</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>symmetry_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[symmetry_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>symmetry_sd_error</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>symmetry_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[symmetry_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>symmetry_worst</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fractal_dimension_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fractal_dimension_mean]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>fractal_dimension_mean</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fractal_dimension_sd_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fractal_dimension_sd_error]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>fractal_dimension_sd_error</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fractal_dimension_worst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fractal_dimension_worst]</local-name>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias>fractal_dimension_worst</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[breast-cancer]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AF570:no:A1:AF570:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Area Mean' datatype='real' name='[area_mean]' role='measure' type='quantitative' />
      <column caption='Area Sd Error' datatype='real' name='[area_sd_error]' role='measure' type='quantitative' />
      <column caption='Area Worst' datatype='real' name='[area_worst]' role='measure' type='quantitative' />
      <column caption='Compactness Mean' datatype='real' name='[compactness_mean]' role='measure' type='quantitative' />
      <column caption='Compactness Sd Error' datatype='real' name='[compactness_sd_error]' role='measure' type='quantitative' />
      <column caption='Compactness Worst' datatype='real' name='[compactness_worst]' role='measure' type='quantitative' />
      <column caption='Concave Points Mean' datatype='real' name='[concave_points_mean]' role='measure' type='quantitative' />
      <column caption='Concave Points Sd Error' datatype='real' name='[concave_points_sd_error]' role='measure' type='quantitative' />
      <column caption='Concave Points Worst' datatype='real' name='[concave_points_worst]' role='measure' type='quantitative' />
      <column caption='Concavity Mean' datatype='real' name='[concavity_mean]' role='measure' type='quantitative' />
      <column caption='Concavity Sd Error' datatype='real' name='[concavity_sd_error]' role='measure' type='quantitative' />
      <column caption='Concavity Worst' datatype='real' name='[concavity_worst]' role='measure' type='quantitative' />
      <column caption='Diagnosis' datatype='string' name='[diagnosis]' role='dimension' type='nominal' />
      <column caption='Fractal Dimension Mean' datatype='real' name='[fractal_dimension_mean]' role='measure' type='quantitative' />
      <column caption='Fractal Dimension Sd Error' datatype='real' name='[fractal_dimension_sd_error]' role='measure' type='quantitative' />
      <column caption='Fractal Dimension Worst' datatype='real' name='[fractal_dimension_worst]' role='measure' type='quantitative' />
      <column caption='Perimeter Mean' datatype='real' name='[perimeter_mean]' role='measure' type='quantitative' />
      <column caption='Perimeter Sd Error' datatype='real' name='[perimeter_sd_error]' role='measure' type='quantitative' />
      <column caption='Perimeter Worst' datatype='real' name='[perimeter_worst]' role='measure' type='quantitative' />
      <column caption='Radius Mean' datatype='real' name='[radius_mean]' role='measure' type='quantitative' />
      <column caption='Radius Sd Error' datatype='real' name='[radius_sd_error]' role='measure' type='quantitative' />
      <column caption='Radius Worst' datatype='real' name='[radius_worst]' role='measure' type='quantitative' />
      <column caption='Smoothness Mean' datatype='real' name='[smoothness_mean]' role='measure' type='quantitative' />
      <column caption='Smoothness Sd Error' datatype='real' name='[smoothness_sd_error]' role='measure' type='quantitative' />
      <column caption='Smoothness Worst' datatype='real' name='[smoothness_worst]' role='measure' type='quantitative' />
      <column caption='Symmetry Mean' datatype='real' name='[symmetry_mean]' role='measure' type='quantitative' />
      <column caption='Symmetry Sd Error' datatype='real' name='[symmetry_sd_error]' role='measure' type='quantitative' />
      <column caption='Symmetry Worst' datatype='real' name='[symmetry_worst]' role='measure' type='quantitative' />
      <column caption='Texture Mean' datatype='real' name='[texture_mean]' role='measure' type='quantitative' />
      <column caption='Texture Sd Error' datatype='real' name='[texture_sd_error]' role='measure' type='quantitative' />
      <column caption='Texture Worst' datatype='real' name='[texture_worst]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.107143' measure-ordering='alphabetic' measure-percentage='0.892857' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='breast-cancer (breast-cancer)' name='federated.1u9bhqa0axbd4x16bnv0q00o2ch8' />
          </datasources>
          <datasource-dependencies datasource='federated.1u9bhqa0axbd4x16bnv0q00o2ch8'>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Area Mean' datatype='real' name='[area_mean]' role='measure' type='quantitative' />
            <column caption='Compactness Mean' datatype='real' name='[compactness_mean]' role='measure' type='quantitative' />
            <column caption='Concave Points Mean' datatype='real' name='[concave_points_mean]' role='measure' type='quantitative' />
            <column caption='Concavity Mean' datatype='real' name='[concavity_mean]' role='measure' type='quantitative' />
            <column caption='Diagnosis' datatype='string' name='[diagnosis]' role='dimension' type='nominal' />
            <column caption='Fractal Dimension Mean' datatype='real' name='[fractal_dimension_mean]' role='measure' type='quantitative' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[diagnosis]' derivation='None' name='[none:diagnosis:nk]' pivot='key' type='nominal' />
            <column caption='Perimeter Mean' datatype='real' name='[perimeter_mean]' role='measure' type='quantitative' />
            <column caption='Smoothness Mean' datatype='real' name='[smoothness_mean]' role='measure' type='quantitative' />
            <column-instance column='[area_mean]' derivation='Sum' name='[sum:area_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[compactness_mean]' derivation='Sum' name='[sum:compactness_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[concave_points_mean]' derivation='Sum' name='[sum:concave_points_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[concavity_mean]' derivation='Sum' name='[sum:concavity_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fractal_dimension_mean]' derivation='Sum' name='[sum:fractal_dimension_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perimeter_mean]' derivation='Sum' name='[sum:perimeter_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[smoothness_mean]' derivation='Sum' name='[sum:smoothness_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[symmetry_mean]' derivation='Sum' name='[sum:symmetry_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[texture_mean]' derivation='Sum' name='[sum:texture_mean:qk]' pivot='key' type='quantitative' />
            <column caption='Symmetry Mean' datatype='real' name='[symmetry_mean]' role='measure' type='quantitative' />
            <column caption='Texture Mean' datatype='real' name='[texture_mean]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:area_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:fractal_dimension_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:concave_points_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:smoothness_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' x-axis-name='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:texture_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' />
              <lod column='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:compactness_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:concavity_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:perimeter_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:concavity_mean:qk] + [federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:symmetry_mean:qk]))))</rows>
        <cols>([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:area_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:concave_points_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:fractal_dimension_mean:qk] + ([federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:smoothness_mean:qk] + [federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[sum:texture_mean:qk]))))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:ID:ok]</field>
            <field>[federated.1u9bhqa0axbd4x16bnv0q00o2ch8].[none:diagnosis:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
